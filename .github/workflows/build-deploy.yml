name: Test and Deploy docker Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "development"]
  pull_request:
    branches: [ "main", "development"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  dotnet-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'
      
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./backend/Tests
      
      - name: Run Tests and Save Results
        run: dotnet test ./backend/Tests/Tests.csproj --logger "trx;LogFileName=TestResults.trx"

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate HTML Report
        run: reportgenerator -reports:./backend/Tests/TestResults/TestResults.trx -targetdir:TestReports -reporttypes:Html

      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ./backend/Tests/TestReports/index.html

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./backend/Tests/TestResults/TestResults.trx
  # This workflow contains a single job called "build"
  deploy-to-self-hosted:
    runs-on: self-hosted
    needs: dotnet-test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build 
        run: docker compose build
      - name: Deploy with Docker Compose
        run: docker compose up -d
