name: Test and Deploy docker Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "development"]
  pull_request:
    branches: [ "main", "development"]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # dotnet-test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
      
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: '8.0'
      
  #     - name: Restore dependencies
  #       run: dotnet restore
  #       working-directory: ./backend/Tests
      
  #     - name: Run Tests and Save Results
  #       run: dotnet test ./backend/Tests/Tests.csproj --logger "trx;LogFileName=TestResults.trx"

  #     - name: Upload Test Results
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: test-results
  #         path: ./backend/Tests/TestResults/TestResults.trx
          
  #     - name: Install ReportGenerator
  #       run: dotnet tool install --global dotnet-reportgenerator-globaltool

  #     - name: Generate HTML Report
  #       run: reportgenerator \
  #            -reports:./backend/Tests/TestResults/TestResults.trx \
  #            -targetdir:./backend/Tests/TestReports \
  #            -reporttypes:HtmlInline \
  #            -verbosity:Verbose

  #     - name: Upload HTML Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: test-reports
  #         path: ./backend/Tests/TestReports/*

  build-and-deploy:
    runs-on: self-hosted

    steps:
      # リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # GitVersionでバージョン番号を生成
      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        id: gitversion
        with:
          versionSpec: '5.x'
          
      # Dockerビルドでバージョン番号を使う
      - name: Build and Tag Docker Images
        run: |
          docker compose build \
            --build-arg VERSION=${{ github.event.inputs.version }}
          docker tag webapi-image:latest webapi-image:${{ github.event.inputs.version }}
          docker tag react-image:latest react-image:${{ github.event.inputs.version }}

      # イメージをプッシュする
      - name: Push Docker Images
        run: |
          docker push webapi-image:${{  github.event.inputs.version  }}
          docker push react-image:${{  github.event.inputs.version  }}
  
  
  Run:
    runs-on: self-hosted
    needs: build-and-deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Deploy with Docker Compose
        run: docker compose up -d
