name: For docker

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "development"]
  pull_request:
    branches: [ "main", "development"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-to-self-hosted:
    runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  # git-version:
  #   runs-on: doradora-windows
  #   needs: deploy-to-self-hosted
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
        
  #     - name: Show dir
  #       shell: powershell
  #       run: |
  #         Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
  #         echo "${PWD.Path}"
  #     - name: Get Git Version
  #       shell: powershell
  #       run: |
  #         $VERSION = git describe --tags --always
  #         echo "VERSION=$VERSION" >> $env:GITHUB_ENV
  #     - name: Debug Version
  #       run: echo "Tag:${{ env.VERSION  }}"
  #     - name: Debug Environment Variables
  #       run: echo "GIT_TAG=${{ env.VERSION  }}"
        
  build-in-self-hosted:
    runs-on: self-hosted
    needs: deploy-to-self-hosted
    steps:
      - name: Build 
        run: |
          echo "${{ secrets.RUNNER_PASSWORD }}" | sudo -S docker compose build
      - name: Deploy with Docker Compose
        run: |
          echo "${{ secrets.RUNNER_PASSWORD }}" | sudo -S docker compose up -d
